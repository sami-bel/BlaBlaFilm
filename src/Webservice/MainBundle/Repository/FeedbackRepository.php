<?php

namespace Webservice\MainBundle\Repository;

/**
 * FeedbackSceanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeedbackRepository extends \Doctrine\ORM\EntityRepository
{
    // type de feedback : indique Ã  quoi on donne l'avais 
    private $senace = 1 ;
    private $film = 2;
    private $user = 3;
    private $equipment = 4 ;

    public function findAllFeedbackSeance($idSeance)
    {
        $qb = $this ->createQueryBuilder('f');

        $qb ->where('f.idTarget = :id')
            ->setParameter('id', $idSeance)
            ->andWhere('f.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->senace );

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }

    public function findFbSeanceDelete($idSeance,$idExaminer,$idFeedback)
    {
        $qb = $this ->createQueryBuilder('f');

        $qb ->where('f.id = :id')
            ->setParameter('id', $idFeedback)
            ->andwhere('f.idTarget = :id')
            ->setParameter('id', $idSeance)
            ->andWhere('f.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->senace )
            ->andWhere('f.idExaminer = :idExaminer')
            ->setParameter('idExaminer',$idExaminer );

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }

    public function findAllFeedbackFilm($idFilm)
    {
        $qb = $this ->createQueryBuilder('f');

        $qb ->where('f.idTarget = :id')
            ->setParameter('id', $idFilm)
            ->andWhere('f.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->film ); // $filmindique que le feedback est un feedback d un film

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }
    public function findFbFilmDelete($idFilm,$idExaminer,$idFeedback)
    {
        $qb = $this ->createQueryBuilder('f');
        $qb ->where('f.id = :id')
            ->setParameter('id', $idFeedback)
            ->andwhere('f.idTarget = :id')
            ->setParameter('id', $idFilm)
            ->andWhere('f.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->film )
            ->andWhere('f.idExaminer = :idExaminer')
            ->setParameter('idExaminer',$idExaminer );

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }

    public function findAllFeedbackUser($idUser)
    {
        $qb = $this ->createQueryBuilder('u');

        $qb ->where('u.idTarget = :id')
            ->setParameter('id', $idUser)
            ->andWhere('u.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->user ); // $user indique que le feedback est un feedback d un user

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }

    public function findFbUserDelete($idUser,$idExaminer,$idFeedback)
    {
        $qb = $this ->createQueryBuilder('u');
        $qb ->where('u.id = :id')
            ->setParameter('id', $idFeedback)
            ->andwhere('u.idTarget = :id')
            ->setParameter('id', $idUser)
            ->andWhere('u.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->user )
            ->andWhere('u.idExaminer = :idExaminer')
            ->setParameter('idExaminer',$idExaminer );

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }

    public function findAllFeedbackEquipment($idEquip)
    {
        $qb = $this ->createQueryBuilder('e');

        $qb ->where('e.idTarget = :id')
            ->setParameter('id', $idEquip)
            ->andWhere('e.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->equipment ); // $equipment indique que le feedback est un feedback d un equipement

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }

    public function findFbEquipmentDelete($idEquipment,$idExaminer,$idFeedback)
    {
        $qb = $this ->createQueryBuilder('e');
        $qb ->where('e.id = :id')
            ->setParameter('id', $idFeedback)
            ->andwhere('e.idTarget = :id')
            ->setParameter('id', $idEquipment)
            ->andWhere('e.typeFeedback = :typeFeedback')
            ->setParameter('typeFeedback',$this->equipment )
            ->andWhere('e.idExaminer = :idExaminer')
            ->setParameter('idExaminer',$idExaminer );

        $resultat =$qb->getQuery() ;
        return $resultat->getResult();

    }
}
